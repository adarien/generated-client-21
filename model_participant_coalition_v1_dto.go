/*
School21 OpenAPI Specification

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParticipantCoalitionV1DTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantCoalitionV1DTO{}

// ParticipantCoalitionV1DTO Participant Coalition
type ParticipantCoalitionV1DTO struct {
	// Coalition ID
	CoalitionId int64 `json:"coalitionId"`
	// Coalition name
	Name string `json:"name"`
	// Rank of the participant
	Rank *int32 `json:"rank,omitempty"`
}

type _ParticipantCoalitionV1DTO ParticipantCoalitionV1DTO

// NewParticipantCoalitionV1DTO instantiates a new ParticipantCoalitionV1DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantCoalitionV1DTO(coalitionId int64, name string) *ParticipantCoalitionV1DTO {
	this := ParticipantCoalitionV1DTO{}
	this.CoalitionId = coalitionId
	this.Name = name
	return &this
}

// NewParticipantCoalitionV1DTOWithDefaults instantiates a new ParticipantCoalitionV1DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantCoalitionV1DTOWithDefaults() *ParticipantCoalitionV1DTO {
	this := ParticipantCoalitionV1DTO{}
	return &this
}

// GetCoalitionId returns the CoalitionId field value
func (o *ParticipantCoalitionV1DTO) GetCoalitionId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CoalitionId
}

// GetCoalitionIdOk returns a tuple with the CoalitionId field value
// and a boolean to check if the value has been set.
func (o *ParticipantCoalitionV1DTO) GetCoalitionIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CoalitionId, true
}

// SetCoalitionId sets field value
func (o *ParticipantCoalitionV1DTO) SetCoalitionId(v int64) {
	o.CoalitionId = v
}

// GetName returns the Name field value
func (o *ParticipantCoalitionV1DTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ParticipantCoalitionV1DTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ParticipantCoalitionV1DTO) SetName(v string) {
	o.Name = v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *ParticipantCoalitionV1DTO) GetRank() int32 {
	if o == nil || IsNil(o.Rank) {
		var ret int32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantCoalitionV1DTO) GetRankOk() (*int32, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *ParticipantCoalitionV1DTO) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given int32 and assigns it to the Rank field.
func (o *ParticipantCoalitionV1DTO) SetRank(v int32) {
	o.Rank = &v
}

func (o ParticipantCoalitionV1DTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantCoalitionV1DTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["coalitionId"] = o.CoalitionId
	toSerialize["name"] = o.Name
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	return toSerialize, nil
}

func (o *ParticipantCoalitionV1DTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"coalitionId",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParticipantCoalitionV1DTO := _ParticipantCoalitionV1DTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParticipantCoalitionV1DTO)

	if err != nil {
		return err
	}

	*o = ParticipantCoalitionV1DTO(varParticipantCoalitionV1DTO)

	return err
}

type NullableParticipantCoalitionV1DTO struct {
	value *ParticipantCoalitionV1DTO
	isSet bool
}

func (v NullableParticipantCoalitionV1DTO) Get() *ParticipantCoalitionV1DTO {
	return v.value
}

func (v *NullableParticipantCoalitionV1DTO) Set(val *ParticipantCoalitionV1DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantCoalitionV1DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantCoalitionV1DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantCoalitionV1DTO(val *ParticipantCoalitionV1DTO) *NullableParticipantCoalitionV1DTO {
	return &NullableParticipantCoalitionV1DTO{value: val, isSet: true}
}

func (v NullableParticipantCoalitionV1DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantCoalitionV1DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


