/*
School21 OpenAPI Specification

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ParticipantFeedbackV1DTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantFeedbackV1DTO{}

// ParticipantFeedbackV1DTO Participant Feedback
type ParticipantFeedbackV1DTO struct {
	// Average punctuality score for a peer review
	AverageVerifierPunctuality *float64 `json:"averageVerifierPunctuality,omitempty"`
	// Average interest score for a peer review
	AverageVerifierInterest *float64 `json:"averageVerifierInterest,omitempty"`
	// Average thoroughness score for a peer review
	AverageVerifierThoroughness *float64 `json:"averageVerifierThoroughness,omitempty"`
	// Average friendliness score for a peer review
	AverageVerifierFriendliness *float64 `json:"averageVerifierFriendliness,omitempty"`
}

// NewParticipantFeedbackV1DTO instantiates a new ParticipantFeedbackV1DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantFeedbackV1DTO() *ParticipantFeedbackV1DTO {
	this := ParticipantFeedbackV1DTO{}
	return &this
}

// NewParticipantFeedbackV1DTOWithDefaults instantiates a new ParticipantFeedbackV1DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantFeedbackV1DTOWithDefaults() *ParticipantFeedbackV1DTO {
	this := ParticipantFeedbackV1DTO{}
	return &this
}

// GetAverageVerifierPunctuality returns the AverageVerifierPunctuality field value if set, zero value otherwise.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierPunctuality() float64 {
	if o == nil || IsNil(o.AverageVerifierPunctuality) {
		var ret float64
		return ret
	}
	return *o.AverageVerifierPunctuality
}

// GetAverageVerifierPunctualityOk returns a tuple with the AverageVerifierPunctuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierPunctualityOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageVerifierPunctuality) {
		return nil, false
	}
	return o.AverageVerifierPunctuality, true
}

// HasAverageVerifierPunctuality returns a boolean if a field has been set.
func (o *ParticipantFeedbackV1DTO) HasAverageVerifierPunctuality() bool {
	if o != nil && !IsNil(o.AverageVerifierPunctuality) {
		return true
	}

	return false
}

// SetAverageVerifierPunctuality gets a reference to the given float64 and assigns it to the AverageVerifierPunctuality field.
func (o *ParticipantFeedbackV1DTO) SetAverageVerifierPunctuality(v float64) {
	o.AverageVerifierPunctuality = &v
}

// GetAverageVerifierInterest returns the AverageVerifierInterest field value if set, zero value otherwise.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierInterest() float64 {
	if o == nil || IsNil(o.AverageVerifierInterest) {
		var ret float64
		return ret
	}
	return *o.AverageVerifierInterest
}

// GetAverageVerifierInterestOk returns a tuple with the AverageVerifierInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierInterestOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageVerifierInterest) {
		return nil, false
	}
	return o.AverageVerifierInterest, true
}

// HasAverageVerifierInterest returns a boolean if a field has been set.
func (o *ParticipantFeedbackV1DTO) HasAverageVerifierInterest() bool {
	if o != nil && !IsNil(o.AverageVerifierInterest) {
		return true
	}

	return false
}

// SetAverageVerifierInterest gets a reference to the given float64 and assigns it to the AverageVerifierInterest field.
func (o *ParticipantFeedbackV1DTO) SetAverageVerifierInterest(v float64) {
	o.AverageVerifierInterest = &v
}

// GetAverageVerifierThoroughness returns the AverageVerifierThoroughness field value if set, zero value otherwise.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierThoroughness() float64 {
	if o == nil || IsNil(o.AverageVerifierThoroughness) {
		var ret float64
		return ret
	}
	return *o.AverageVerifierThoroughness
}

// GetAverageVerifierThoroughnessOk returns a tuple with the AverageVerifierThoroughness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierThoroughnessOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageVerifierThoroughness) {
		return nil, false
	}
	return o.AverageVerifierThoroughness, true
}

// HasAverageVerifierThoroughness returns a boolean if a field has been set.
func (o *ParticipantFeedbackV1DTO) HasAverageVerifierThoroughness() bool {
	if o != nil && !IsNil(o.AverageVerifierThoroughness) {
		return true
	}

	return false
}

// SetAverageVerifierThoroughness gets a reference to the given float64 and assigns it to the AverageVerifierThoroughness field.
func (o *ParticipantFeedbackV1DTO) SetAverageVerifierThoroughness(v float64) {
	o.AverageVerifierThoroughness = &v
}

// GetAverageVerifierFriendliness returns the AverageVerifierFriendliness field value if set, zero value otherwise.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierFriendliness() float64 {
	if o == nil || IsNil(o.AverageVerifierFriendliness) {
		var ret float64
		return ret
	}
	return *o.AverageVerifierFriendliness
}

// GetAverageVerifierFriendlinessOk returns a tuple with the AverageVerifierFriendliness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantFeedbackV1DTO) GetAverageVerifierFriendlinessOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageVerifierFriendliness) {
		return nil, false
	}
	return o.AverageVerifierFriendliness, true
}

// HasAverageVerifierFriendliness returns a boolean if a field has been set.
func (o *ParticipantFeedbackV1DTO) HasAverageVerifierFriendliness() bool {
	if o != nil && !IsNil(o.AverageVerifierFriendliness) {
		return true
	}

	return false
}

// SetAverageVerifierFriendliness gets a reference to the given float64 and assigns it to the AverageVerifierFriendliness field.
func (o *ParticipantFeedbackV1DTO) SetAverageVerifierFriendliness(v float64) {
	o.AverageVerifierFriendliness = &v
}

func (o ParticipantFeedbackV1DTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantFeedbackV1DTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageVerifierPunctuality) {
		toSerialize["averageVerifierPunctuality"] = o.AverageVerifierPunctuality
	}
	if !IsNil(o.AverageVerifierInterest) {
		toSerialize["averageVerifierInterest"] = o.AverageVerifierInterest
	}
	if !IsNil(o.AverageVerifierThoroughness) {
		toSerialize["averageVerifierThoroughness"] = o.AverageVerifierThoroughness
	}
	if !IsNil(o.AverageVerifierFriendliness) {
		toSerialize["averageVerifierFriendliness"] = o.AverageVerifierFriendliness
	}
	return toSerialize, nil
}

type NullableParticipantFeedbackV1DTO struct {
	value *ParticipantFeedbackV1DTO
	isSet bool
}

func (v NullableParticipantFeedbackV1DTO) Get() *ParticipantFeedbackV1DTO {
	return v.value
}

func (v *NullableParticipantFeedbackV1DTO) Set(val *ParticipantFeedbackV1DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantFeedbackV1DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantFeedbackV1DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantFeedbackV1DTO(val *ParticipantFeedbackV1DTO) *NullableParticipantFeedbackV1DTO {
	return &NullableParticipantFeedbackV1DTO{value: val, isSet: true}
}

func (v NullableParticipantFeedbackV1DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantFeedbackV1DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


