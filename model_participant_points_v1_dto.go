/*
School21 OpenAPI Specification

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParticipantPointsV1DTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantPointsV1DTO{}

// ParticipantPointsV1DTO Participant Points
type ParticipantPointsV1DTO struct {
	// Participant’s number of Peer Review Points
	PeerReviewPoints int32 `json:"peerReviewPoints"`
	// Participant’s number of Code Review Points
	CodeReviewPoints int32 `json:"codeReviewPoints"`
	// Participant’s number of coins
	Coins int32 `json:"coins"`
}

type _ParticipantPointsV1DTO ParticipantPointsV1DTO

// NewParticipantPointsV1DTO instantiates a new ParticipantPointsV1DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantPointsV1DTO(peerReviewPoints int32, codeReviewPoints int32, coins int32) *ParticipantPointsV1DTO {
	this := ParticipantPointsV1DTO{}
	this.PeerReviewPoints = peerReviewPoints
	this.CodeReviewPoints = codeReviewPoints
	this.Coins = coins
	return &this
}

// NewParticipantPointsV1DTOWithDefaults instantiates a new ParticipantPointsV1DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantPointsV1DTOWithDefaults() *ParticipantPointsV1DTO {
	this := ParticipantPointsV1DTO{}
	return &this
}

// GetPeerReviewPoints returns the PeerReviewPoints field value
func (o *ParticipantPointsV1DTO) GetPeerReviewPoints() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PeerReviewPoints
}

// GetPeerReviewPointsOk returns a tuple with the PeerReviewPoints field value
// and a boolean to check if the value has been set.
func (o *ParticipantPointsV1DTO) GetPeerReviewPointsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeerReviewPoints, true
}

// SetPeerReviewPoints sets field value
func (o *ParticipantPointsV1DTO) SetPeerReviewPoints(v int32) {
	o.PeerReviewPoints = v
}

// GetCodeReviewPoints returns the CodeReviewPoints field value
func (o *ParticipantPointsV1DTO) GetCodeReviewPoints() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CodeReviewPoints
}

// GetCodeReviewPointsOk returns a tuple with the CodeReviewPoints field value
// and a boolean to check if the value has been set.
func (o *ParticipantPointsV1DTO) GetCodeReviewPointsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CodeReviewPoints, true
}

// SetCodeReviewPoints sets field value
func (o *ParticipantPointsV1DTO) SetCodeReviewPoints(v int32) {
	o.CodeReviewPoints = v
}

// GetCoins returns the Coins field value
func (o *ParticipantPointsV1DTO) GetCoins() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Coins
}

// GetCoinsOk returns a tuple with the Coins field value
// and a boolean to check if the value has been set.
func (o *ParticipantPointsV1DTO) GetCoinsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Coins, true
}

// SetCoins sets field value
func (o *ParticipantPointsV1DTO) SetCoins(v int32) {
	o.Coins = v
}

func (o ParticipantPointsV1DTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantPointsV1DTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["peerReviewPoints"] = o.PeerReviewPoints
	toSerialize["codeReviewPoints"] = o.CodeReviewPoints
	toSerialize["coins"] = o.Coins
	return toSerialize, nil
}

func (o *ParticipantPointsV1DTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"peerReviewPoints",
		"codeReviewPoints",
		"coins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParticipantPointsV1DTO := _ParticipantPointsV1DTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParticipantPointsV1DTO)

	if err != nil {
		return err
	}

	*o = ParticipantPointsV1DTO(varParticipantPointsV1DTO)

	return err
}

type NullableParticipantPointsV1DTO struct {
	value *ParticipantPointsV1DTO
	isSet bool
}

func (v NullableParticipantPointsV1DTO) Get() *ParticipantPointsV1DTO {
	return v.value
}

func (v *NullableParticipantPointsV1DTO) Set(val *ParticipantPointsV1DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantPointsV1DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantPointsV1DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantPointsV1DTO(val *ParticipantPointsV1DTO) *NullableParticipantPointsV1DTO {
	return &NullableParticipantPointsV1DTO{value: val, isSet: true}
}

func (v NullableParticipantPointsV1DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantPointsV1DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


