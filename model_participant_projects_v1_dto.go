/*
School21 OpenAPI Specification

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParticipantProjectsV1DTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantProjectsV1DTO{}

// ParticipantProjectsV1DTO Participant Projects
type ParticipantProjectsV1DTO struct {
	// Array of projects
	Projects []ParticipantProjectV1DTO `json:"projects"`
}

type _ParticipantProjectsV1DTO ParticipantProjectsV1DTO

// NewParticipantProjectsV1DTO instantiates a new ParticipantProjectsV1DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantProjectsV1DTO(projects []ParticipantProjectV1DTO) *ParticipantProjectsV1DTO {
	this := ParticipantProjectsV1DTO{}
	this.Projects = projects
	return &this
}

// NewParticipantProjectsV1DTOWithDefaults instantiates a new ParticipantProjectsV1DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantProjectsV1DTOWithDefaults() *ParticipantProjectsV1DTO {
	this := ParticipantProjectsV1DTO{}
	return &this
}

// GetProjects returns the Projects field value
func (o *ParticipantProjectsV1DTO) GetProjects() []ParticipantProjectV1DTO {
	if o == nil {
		var ret []ParticipantProjectV1DTO
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
func (o *ParticipantProjectsV1DTO) GetProjectsOk() ([]ParticipantProjectV1DTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Projects, true
}

// SetProjects sets field value
func (o *ParticipantProjectsV1DTO) SetProjects(v []ParticipantProjectV1DTO) {
	o.Projects = v
}

func (o ParticipantProjectsV1DTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantProjectsV1DTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projects"] = o.Projects
	return toSerialize, nil
}

func (o *ParticipantProjectsV1DTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"projects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParticipantProjectsV1DTO := _ParticipantProjectsV1DTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParticipantProjectsV1DTO)

	if err != nil {
		return err
	}

	*o = ParticipantProjectsV1DTO(varParticipantProjectsV1DTO)

	return err
}

type NullableParticipantProjectsV1DTO struct {
	value *ParticipantProjectsV1DTO
	isSet bool
}

func (v NullableParticipantProjectsV1DTO) Get() *ParticipantProjectsV1DTO {
	return v.value
}

func (v *NullableParticipantProjectsV1DTO) Set(val *ParticipantProjectsV1DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantProjectsV1DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantProjectsV1DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantProjectsV1DTO(val *ParticipantProjectsV1DTO) *NullableParticipantProjectsV1DTO {
	return &NullableParticipantProjectsV1DTO{value: val, isSet: true}
}

func (v NullableParticipantProjectsV1DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantProjectsV1DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


