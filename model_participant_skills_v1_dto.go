/*
School21 OpenAPI Specification

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParticipantSkillsV1DTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantSkillsV1DTO{}

// ParticipantSkillsV1DTO Participant Skills
type ParticipantSkillsV1DTO struct {
	// Array of skills
	Skills []ParticipantSkillV1DTO `json:"skills"`
}

type _ParticipantSkillsV1DTO ParticipantSkillsV1DTO

// NewParticipantSkillsV1DTO instantiates a new ParticipantSkillsV1DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantSkillsV1DTO(skills []ParticipantSkillV1DTO) *ParticipantSkillsV1DTO {
	this := ParticipantSkillsV1DTO{}
	this.Skills = skills
	return &this
}

// NewParticipantSkillsV1DTOWithDefaults instantiates a new ParticipantSkillsV1DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantSkillsV1DTOWithDefaults() *ParticipantSkillsV1DTO {
	this := ParticipantSkillsV1DTO{}
	return &this
}

// GetSkills returns the Skills field value
func (o *ParticipantSkillsV1DTO) GetSkills() []ParticipantSkillV1DTO {
	if o == nil {
		var ret []ParticipantSkillV1DTO
		return ret
	}

	return o.Skills
}

// GetSkillsOk returns a tuple with the Skills field value
// and a boolean to check if the value has been set.
func (o *ParticipantSkillsV1DTO) GetSkillsOk() ([]ParticipantSkillV1DTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Skills, true
}

// SetSkills sets field value
func (o *ParticipantSkillsV1DTO) SetSkills(v []ParticipantSkillV1DTO) {
	o.Skills = v
}

func (o ParticipantSkillsV1DTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantSkillsV1DTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["skills"] = o.Skills
	return toSerialize, nil
}

func (o *ParticipantSkillsV1DTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"skills",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParticipantSkillsV1DTO := _ParticipantSkillsV1DTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParticipantSkillsV1DTO)

	if err != nil {
		return err
	}

	*o = ParticipantSkillsV1DTO(varParticipantSkillsV1DTO)

	return err
}

type NullableParticipantSkillsV1DTO struct {
	value *ParticipantSkillsV1DTO
	isSet bool
}

func (v NullableParticipantSkillsV1DTO) Get() *ParticipantSkillsV1DTO {
	return v.value
}

func (v *NullableParticipantSkillsV1DTO) Set(val *ParticipantSkillsV1DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantSkillsV1DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantSkillsV1DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantSkillsV1DTO(val *ParticipantSkillsV1DTO) *NullableParticipantSkillsV1DTO {
	return &NullableParticipantSkillsV1DTO{value: val, isSet: true}
}

func (v NullableParticipantSkillsV1DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantSkillsV1DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


