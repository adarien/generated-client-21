/*
School21 OpenAPI Specification

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParticipantWorkstationV1DTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantWorkstationV1DTO{}

// ParticipantWorkstationV1DTO Participant Workstation
type ParticipantWorkstationV1DTO struct {
	// Cluster ID
	ClusterId int64 `json:"clusterId"`
	// Cluster name
	ClusterName string `json:"clusterName"`
	// Row of a workplace
	Row string `json:"row"`
	// Number of a workplace
	Number int32 `json:"number"`
}

type _ParticipantWorkstationV1DTO ParticipantWorkstationV1DTO

// NewParticipantWorkstationV1DTO instantiates a new ParticipantWorkstationV1DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantWorkstationV1DTO(clusterId int64, clusterName string, row string, number int32) *ParticipantWorkstationV1DTO {
	this := ParticipantWorkstationV1DTO{}
	this.ClusterId = clusterId
	this.ClusterName = clusterName
	this.Row = row
	this.Number = number
	return &this
}

// NewParticipantWorkstationV1DTOWithDefaults instantiates a new ParticipantWorkstationV1DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantWorkstationV1DTOWithDefaults() *ParticipantWorkstationV1DTO {
	this := ParticipantWorkstationV1DTO{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *ParticipantWorkstationV1DTO) GetClusterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ParticipantWorkstationV1DTO) GetClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ParticipantWorkstationV1DTO) SetClusterId(v int64) {
	o.ClusterId = v
}

// GetClusterName returns the ClusterName field value
func (o *ParticipantWorkstationV1DTO) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *ParticipantWorkstationV1DTO) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *ParticipantWorkstationV1DTO) SetClusterName(v string) {
	o.ClusterName = v
}

// GetRow returns the Row field value
func (o *ParticipantWorkstationV1DTO) GetRow() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Row
}

// GetRowOk returns a tuple with the Row field value
// and a boolean to check if the value has been set.
func (o *ParticipantWorkstationV1DTO) GetRowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Row, true
}

// SetRow sets field value
func (o *ParticipantWorkstationV1DTO) SetRow(v string) {
	o.Row = v
}

// GetNumber returns the Number field value
func (o *ParticipantWorkstationV1DTO) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *ParticipantWorkstationV1DTO) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *ParticipantWorkstationV1DTO) SetNumber(v int32) {
	o.Number = v
}

func (o ParticipantWorkstationV1DTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantWorkstationV1DTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterId"] = o.ClusterId
	toSerialize["clusterName"] = o.ClusterName
	toSerialize["row"] = o.Row
	toSerialize["number"] = o.Number
	return toSerialize, nil
}

func (o *ParticipantWorkstationV1DTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusterId",
		"clusterName",
		"row",
		"number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParticipantWorkstationV1DTO := _ParticipantWorkstationV1DTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParticipantWorkstationV1DTO)

	if err != nil {
		return err
	}

	*o = ParticipantWorkstationV1DTO(varParticipantWorkstationV1DTO)

	return err
}

type NullableParticipantWorkstationV1DTO struct {
	value *ParticipantWorkstationV1DTO
	isSet bool
}

func (v NullableParticipantWorkstationV1DTO) Get() *ParticipantWorkstationV1DTO {
	return v.value
}

func (v *NullableParticipantWorkstationV1DTO) Set(val *ParticipantWorkstationV1DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantWorkstationV1DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantWorkstationV1DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantWorkstationV1DTO(val *ParticipantWorkstationV1DTO) *NullableParticipantWorkstationV1DTO {
	return &NullableParticipantWorkstationV1DTO{value: val, isSet: true}
}

func (v NullableParticipantWorkstationV1DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantWorkstationV1DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


